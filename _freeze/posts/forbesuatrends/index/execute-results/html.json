{
  "hash": "d2302ba76563b779e0f9893165f661c9",
  "result": {
    "markdown": "---\ntitle: forbes_ua_trends\ndescription: |\n  A short description of the post.\nauthor: Vadym Yudneko\ndate: 2023-08-01\ndraft: true\ncategories:\n  - webscrapping\n  - text mining\n  - google trends\n---\n\n\n\n\n# Forbes\n\n\n\n\n::: {.cell}\n\n:::\n\n\n# Gtrends\n\n\n::: {.cell}\n\n:::\n\n\n```{# {r}\n# library(rvest)\n# \n# # The URL of the web page\n# url <- 'https://www.google.com/maps/d/u/0/viewer?mid=10n5IOLu0m7G1jSSKxLXgXPznoGjn7MMO&ll=49.049796668933965%2C30.152437113599326&z=5'\n# \n# # Load the page\n# page <- read_html(url)\n# \n# # Extract the scripts\n# scripts <- html_nodes(page, 'script')\n# \n# # Extract the contents of the scripts as text\n# scripts_text <- html_text(scripts)\n# \n# # Find the script that contains the _pageData variable\n# page_data_script <- grep('_pageData', scripts_text, value=TRUE)\n# \n# # Use a regular expression to extract the value of the _pageData variable\n# # This assumes that the variable is assigned using JSON syntax, like _pageData = {...}\n# page_data <- sub('.*_pageData = (.*);.*', '\\\\1', page_data_script)\n# \n# # Now page_data contains the value of the _pageData variable as a string\n# # You can parse this string as JSON or CSV, depending on the format\n# \n# parsed_data <- read.csv(text = page_data)\n```\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}