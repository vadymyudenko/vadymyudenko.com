{
  "hash": "72ccca6a025d3c45d498d43109b3fd6e",
  "result": {
    "markdown": "---\ntitle: \"Why track your daily life?\"\ndescription: |\n  Thinking about tracking your daily life and most importantly, why would you do that.\n  Timetracking part 2 of N\nauthor: \n - name: Vadym Yudenko\n   affiliation: American University Kyiv\n   affiliation-url: https://auk.edu.ua/en/\ndate: 2023-07-14\ndraft: true \ncategories:\n  - timetracking\n  - self-surveillance\n---\n\n\nUnanswered questions\n\nEventually I have got my data-driven evidence-based answer as to...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# circle_plot <-\n#   data_long |>\n#   filter(activity == \"Waste\") |>\n#   count(day, hour) |>\n#   mutate(\n#     hour_label = case_when(\n#       hour == 12 ~ \"12pm\",\n#       hour == 0 ~ \"12am\",\n#       hour > 12 ~ paste0(hour - 12, \"pm\"),\n#       hour < 12 ~ paste0(hour, \"am\")\n#     ),\n#     pct = n / sum(n)\n#     )\n# \n# \n# tooltip_hour <- function(day, hour_label, ...) {\n#   this_hour_count <-\n#     circle_plot |>\n#     filter(hour_label == !!hour_label)\n# \n#   this_hour_total <- sum(this_hour_count$n)\n#   this_hour_pct <- scales::percent(this_hour_total / sum(circle_plot$n), 0.1)\n#   this_hour_total <- trimws(format(this_hour_total, big.mark = \",\"))\n# \n#   this_hour_days <-\n#     this_hour_count |>\n#     mutate(\n#       across(pct, scales::percent_format(0.1)),\n#       across(n, format, big.mark = \",\"),\n#       across(n, trimws),\n#       text = glue(\"{day}: {pct} ({n})\"),\n#       text = if_else(day == !!day, glue(\"<strong>{text}</strong>\"), text)\n#     ) |>\n#     glue_data(\"<li>{text}</li>\") |>\n#     glue_collapse()\n# \n#   glue::glue(\n#     \"<p><strong>{hour_label}</strong><br><small>{this_hour_pct} of total ({this_hour_total})</small></p>\",\n#     \"<ul>{this_hour_days}</ul>\"\n#   )\n# }\n# \n# circle_plot$tooltip <- pmap_chr(circle_plot, tooltip_hour)\n# \n# \n# plot_time_of_day <-\n#   ggplot(circle_plot) +\n#   aes(y = n, fill = day, x = hour, data_id = hour, tooltip = tooltip) +\n#   geom_area(\n#     data = function(d) {\n#       # Shade from midnight-6am and 6pm-midnight, kinda like geom_step_area()\n#       max_count <- max(d$n)\n#       tibble(\n#         day = sort(rep(unique(d$day), 6)),\n#         # hour = rep(c(0, 6, 6.01, 18, 18.01, 24), 7),\n#         hour = rep(c(6, 12, 12.01, 6, 6.01, 12), 7),\n#         n = rep(c(max_count, max_count, 0, 0, max_count, max_count), 7),\n#         tooltip = \"\"\n#       )\n#     },\n#     fill = \"#aaaaaa30\",\n#   ) +\n#   ggiraph::geom_col_interactive(show.legend = FALSE, width = 1) +\n#   facet_wrap(vars(day), nrow = 2) +\n#   coord_polar(start = pi) +\n#   scale_x_continuous(\n#     breaks = seq(0, 23, 3),\n#     minor_breaks = 0:23,\n#     labels = c(\"12am\", paste0(seq(3, 9, 3), \"am\"), \"12pm\", paste0(seq(3, 9, 3), \"pm\")),\n#     limits = c(0, 24),\n#     expand = expansion()\n#   ) +\n#   scale_y_continuous(expand = expansion(), breaks = seq(0, 100, 25)) +\n#   scale_fill_discrete() +\n#   labs(\n#     title = \"Did I really waste more time in the morning??\",\n#     x = NULL,\n#     y = NULL\n#   ) +\n# #  theme_classic() +\n#   theme(\n#     axis.text.y = element_blank(),\n#     axis.text.x = element_text(size = 10),\n#     panel.grid.major.y = element_blank()\n#   )\n# \n# ggiraph::girafe(\n#   ggobj = plot_time_of_day,\n#   width_svg = 12,\n#   height_svg = 8,\n#   options = list(\n#     ggiraph::opts_hover_inv(\"filter: saturate(30%) brightness(125%)\"),\n#     ggiraph::opts_hover(css = \"opacity:1\"),\n#     ggiraph::opts_tooltip(\n#       placement = \"container\",\n#       css = \"width: 12rem; font-family: var(--font-monospace, 'IBM Plex Mono');\",\n#       # These don't matter, position is set by CSS rules below\n#       offx = 1000,\n#       offy = 400,\n#       use_cursor_pos = FALSE\n#     )\n#   ),\n#   desc = knitr::opts_current$get(\"fig.alt\")\n# )\n```\n:::\n\n\nCode taken and adapted from Garrick Aden's blog\n\nIt depended on the day\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}